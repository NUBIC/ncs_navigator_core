- registered = psc.is_registered?(participant)
.upcoming
  - if registered
    %span.label
      Upcoming Events
  
    %table.records
      %tr
        %th Select
        %th Event
      %tr{ :class => cycle('even_record', 'odd_record') }
        %td
          = link_to "Initiate Contact", new_person_contact_path(participant.person), :class => "add_link icon_link"
        %td
          = participant.upcoming_events.to_sentence
  
  %div{ :id => "participant_schedule_#{participant.id}" }
    - if registered
      = render "schedule", :participant => participant
    - elsif participant.can_register? && registered
      .psc_note
        Not yet registered with PSC.
      = form_for(participant, :url => register_with_psc_participant_path(participant, :redirect_to => "#{request.path}?#{request.query_string}"), :html => {:class => "register_participant_with_psc"}) do |f| 
        = render "shared/full_error_messages", :object => f.object
        %p
          = f.submit "Register with PSC"
    - else
      .developer_note
        PROGRAMMER NOTE:
        Participant is out of sync with PSC. Reset state to "pending".
:javascript
  $(document).ready(function() {
    participantTemplateUI = new NCSCore.UI.Participants({ });
  });