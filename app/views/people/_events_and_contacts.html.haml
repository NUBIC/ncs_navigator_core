.page_section
  - @person.participants.each do |participant|
    .participant_events
      - if participant.events.blank?
        %p
          = "No events exist for #{blank_safe(participant.person.to_s)} at this time."
      - else
        %b
          Contact History
        - participant.events.chronological.reverse_order.each do |event|
          - event_name = event.to_s
          - person = participant.person
          .event
            .header
              .event_actions
                - unless event.closed?
                  - unless event.contact_links.blank?
                    = link_to "Close Event", edit_event_path(event, :close => 'true'),
                      :class => "close_link icon_link",
                      :confirm => "Are you certain that this event should be closed?"
                  = link_to "Mark Out of Window", mark_event_out_of_window_participant_path(participant),
                    :class => "out_of_window_link icon_link",
                    :confirm => "Are you certain that this event is out of window?"
              %span.new_contact_for_previous_event
                = link_to "New Contact", new_person_contact_path(person, :event_id => event.id), :class => "add_link icon_link", :title => "New Contact for #{event_name}" if event.closed?
              %span.type
                = link_to event_name, edit_event_path(event), :class => "edit_link icon_link"
              %span.dates
                = blank_safe(event.event_start_date)
                = " - "
                = blank_safe(event.event_end_date)
              #span.disposition
                - if event.event_disposition
                  - disp = DispositionMapper.disposition_text_for_event(event)
                  = disp.blank? ? "#{event.event_disposition} - #{event.event_disposition_category}" : disp
            .contact_link
              - if event.contact_links.blank?
                .no_event_contact_records
                  No contacts exist for this event.
              - else
                %table.records
                  %tr
                    %th
                      Type
                    %th
                      Date
                    %th
                      Start
                    %th
                      End
                    %th
                      Disposition
                    %th
                      Continue
                  - event.contact_links.map(&:contact).uniq.sort_by{ |c| c.contact_date.to_s }.each do |contact|
                    - cl = contact.contact_links.where(:event_id => event.id).first
                    - cls = cycle('even_record', 'odd_record')
                    %tr{ :class => cls }
                      %td
                        = contact.contact_type
                      %td
                        = link_to contact.contact_date, edit_contact_link_contact_path(cl, contact), :class => "show_link icon_link"
                      %td
                        = contact.contact_start_time
                      %td
                        = contact.contact_end_time
                      %td
                        = DispositionMapper.disposition_text_for_contact(contact)
                      %td
                        - if contact.open? && event.open?
                          - link_text = contact.contact_date.blank? ? "Continue Contact" : "Continue Contact on #{contact.contact_date}"
                          = link_to link_text, decision_page_contact_link_path(cl),
                            :class => "continue_link icon_link"
                    - unless contact.contact_comment.blank?
                      %tr{ :class => "comment_#{cls} #{cls}"  }
                        %td{ :colspan => 6 }
                          = blank_safe(contact.contact_comment, 'No comment')
                    - unless contact.non_interview_reports.blank?
                      %tr{ :class => "comment_#{cls} #{cls}"  }
                        %td{ :colspan => 6 }
                          %b
                            Non-Interview Reports
                          - contact.non_interview_reports.each do |nir|
                            = link_to "#{nir.nir_type_person}", edit_non_interview_report_path(nir, :contact_link_id => cl.id),
                              :class => "edit_link icon_link", :title => nir.nir
