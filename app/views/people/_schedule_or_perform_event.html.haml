- if participant.pending_events.blank?
  - unless participant.can_register_with_psc?(psc)
    - if next_event = participant.next_scheduled_event
      .schedule_next_event
        %b
          Schedule Next Event
        .instructions
          The participant is not currently scheduled for any future event.
          %br
          = "Please choose a date to schedule the #{next_event.event}."
        .schedule_form
          = form_for(participant, :url => schedule_next_event_with_psc_participant_path(participant, :redirect_to => "#{request.path}"),
                                  :html => {:class => "schedule_next_event_with_psc", :autocomplete => "off"}) do |f|
            = render "shared/full_error_messages", :object => f.object
            %p
              = text_field_tag :date, next_event.date.to_s, :class => 'datepicker'
            %p
              = f.submit "Schedule #{next_event.event}"
      .perform_next_event
        %b
          Perform Next Event
        %p
          = link_to "Initiate New Contact for #{participant.upcoming_events.to_sentence}", new_person_contact_path(person), :class => "add_link icon_link", :title => "Initiate Contact"
    - elsif rs = person.last_incomplete_response_set
      - if rs.survey.title =~ /_PregScreen_/
        .perform_next_event
          %b
            Continue Event
        %p
          = link_to "Continue Pregnancy Screener", new_person_contact_path(person), :class => "add_link icon_link", :title => "Initiate Contact"

- else
  .pending_events
    %b
      New Contact for Pending Event
    - participant.pending_events.each do |event|
      .pending_event
        - epoch = participant.high_intensity? ? PatientStudyCalendar::HIGH_INTENSITY : PatientStudyCalendar::LOW_INTENSITY
        = link_to "Create Contact for #{epoch}: #{event.to_s}", new_person_contact_path(person, :event_id => event.id), :class => "add_link icon_link", :title => "Initiate Contact"
        = link_to "Reschedule", reschedule_event_path(event), :class => "reschedule_link icon_link"
