- title "Person Record"

%h3
  = @person

%p.hide
  = link_to "View Participant Record for #{@person}", participant_path(@participant), :class => "show_link icon_link"

.page_section.hide
  %p
    %b
      Current Participant State
    %br
      = @participant.state.titleize
  %p
    %b
      Next State
    .form
      = form_for @participant, :url => development_update_state_participant_path(@participant) do |f| 
        - if @participant.low_intensity?
          - if @participant.pending?
            Registered
            = hidden_field_tag :new_state, "registered"
          - elsif @participant.registered?
            In Pregnancy Probability Group
            = hidden_field_tag :new_state, "in_pregnancy_probability_group"
          - elsif @participant.in_pregnancy_probability_group?
            Pregnant
            - unless @participant.known_to_be_pregnant?
              .developer_note
                Make sure you update the PPG Status to PPG 1 if you move to Pregnant State
            = hidden_field_tag :new_state, "pregnant_and_consented"
          - elsif @participant.pregnant_and_consented?
            Move to High Intensity Arm
            = hidden_field_tag :new_state, "moved_to_high_intensity_arm"
        - else
          - if @participant.in_high_intensity_arm?
            Pre-Pregnancy
            = hidden_field_tag :new_state, "pre_pregnancy"
          - elsif @participant.pre_pregnancy?
            Pregnancy One
            = hidden_field_tag :new_state, "pregnancy_one"
          - else
            N/A
        %br
        - if !@participant.can_register_with_psc?(psc) && !@participant.pregnancy_one?
          = f.submit "Move to next state", :disable_with => 'Updating...'
    - if @participant.can_register_with_psc?(psc)
      = form_for(@participant, :url => register_with_psc_participant_path(@participant, :redirect_to => "#{request.path}"), :html => {:class => "register_participant_with_psc"}) do |f| 
        = render "shared/full_error_messages", :object => f.object
        %p
          = f.submit "Register with PSC"

.page_section
  .intensity
    %b
      Hi/Lo
    %br
      = @participant.high_intensity? ? "High Intensity Participant" : "Low Intensity Participant"  

  .pregnancy_probability_group
    %b
      Pregnancy Probability Group
    %br
      = @participant.ppg_status
      - if @participant.ppg_status.blank?
        %span.warning
          No PPG Assigned
  .upcoming_events
    %b
      Upcoming Events
    %br  
    - if @participant.upcoming_events.blank?
      No Upcoming Events
    - else
      = @participant.upcoming_events.to_sentence
      %br
      - @participant.upcoming_events.each do |event|
        %p
          %b
            = "Instruments for #{event}"
          %br
          - instruments = InstrumentEventMap.instruments_for(event)
          - if instruments.blank?
            There are no Instruments for 
            = event
          - else
            - instruments.each do |ins|
              - if Survey.where(:title => ins).count > 0
                %span{ :class => "known_instrument" }
                  = "#{ins}"
              - else
                = "#{ins}"
              %br
        %p
          %b
            = "Instruments from PSC for #{event}"
          %br
          - if subject_schedules = psc.schedules(@participant)
            - subject_schedules["days"].keys.each do |date|
              - subject_schedules["days"][date]["activities"].each do |activity|
                - @participant.upcoming_events.each do |event|
                  - if activity["study_segment"].include?(event.to_s)
                    .activity
                      = "#{activity["activity"]["name"]}"

.page_section
  .psc_registration
    %b
      PSC
    %br
    - if @participant.can_register_with_psc?(psc)
      Participant needs to be registered in PSC
    - else
      Participant is registered in PSC
      
  = render "/participants/schedule", :participant => @participant if psc.is_registered?(@participant)
  
  %b
  - unless @participant.can_register_with_psc?(psc)
    - if next_event = @participant.next_scheduled_event
      .schedule_next_event
        %b
          Schedule Next Event      
          = form_for(@participant, :url => schedule_next_event_with_psc_participant_path(@participant, :redirect_to => "#{request.path}"), :html => {:class => "schedule_next_event_with_psc"}) do |f| 
            = render "shared/full_error_messages", :object => f.object
            %p
              = text_field_tag :date, next_event.date.to_s, :class => 'datepicker'
            %p
              = f.submit "Schedule #{next_event.event}"
      .perform_next_event
        %b
          Perform Next Event
        %p
          = link_to "Initiate Contact for #{@participant.upcoming_events.to_sentence}", new_person_contact_path(@person), :class => "add_link icon_link"
    - elsif rs = @person.last_incomplete_response_set
      - if rs.survey.title =~ /_PregScreen_/
        .perform_next_event
          %b
            Continue Event
        %p
          = link_to "Continue Pregnancy Screener", new_person_contact_path(@person), :class => "add_link icon_link"
        
.page_section
  - if @participant.low_intensity_state_transition_audits.size > 1
    %table.records
      %tr
        %th
          From
        %th
          To
        %th
          When
      - @participant.low_intensity_state_transition_audits.each do |t|
        - next if t.from.blank?
        %tr{ :class => cycle('even_record', 'odd_record') }
          %td
            = t.from.titleize
          %td
            = t.to.titleize
          %td
            = t.created_at

.page_section
  - unless @person.telephones.blank?
    .telephones
      %b
        Telephones
      %br
      - @person.telephones.each do |t|
        = t.phone_nbr
        = t.phone_type
        %br
  - unless @person.emails.blank?
    .emails
      %b
        Emails
      %br
      - @person.emails.each do |e|
        = e.email
        = e.email_type
        %br
  - unless @person.addresses.blank?
    .addresses
      %b
        Addresses
      %br
      - @person.addresses.each do |a|
        = a.to_s
        %br
:javascript
  $(document).ready(function() {
    $(".datepicker").datepicker({ dateFormat: 'yy-mm-dd' });
  });